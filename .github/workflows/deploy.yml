name: Deploy AWS Lambdas (dev)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  LAMBDA_DIR: lambda
  S3_BUCKET: ${{ secrets.S3_BUCKET }}

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        lambda: [locations, processor, requests, supplies, requests-aggregated, requests-list, send-sms]
    name: Deploy Lambda
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: set lambda name
        run: |
          if [ "${{ matrix.lambda }}" == locations ]; then LAMBDA_NAME=GetLocations
          elif [ "${{ matrix.lambda }}" == processor ]; then LAMBDA_NAME=SaveRequest
          elif [ "${{ matrix.lambda }}" == requests ]; then LAMBDA_NAME=PostRequest
          elif [ "${{ matrix.lambda }}" == supplies ]; then LAMBDA_NAME=GetSupplies
          elif [ "${{ matrix.lambda }}" == requests-aggregated ]; then LAMBDA_NAME=GetRequestsAggregated
          elif [ "${{ matrix.lambda }}" == requests-list ]; then LAMBDA_NAME=ListRequests
          elif [ "${{ matrix.lambda }}" == send-sms ]; then LAMBDA_NAME=SendSms
          else exit 1
          fi
          echo "LAMBDA_NAME=${LAMBDA_NAME}" >> $GITHUB_ENV
      - uses: ukraine-taskforce/requests-backend@main
        with:
          lambda-dir: ${{ env.LAMBDA_DIR }}/${{ matrix.lambda }}
          lambda-name: ${{ env.LAMBDA_NAME }}
          s3-bucket: ${{ env.S3_BUCKET }}
          s3-key: ${{ matrix.lambda }}.zip
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
